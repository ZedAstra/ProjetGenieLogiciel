// <auto-generated />
using System;
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250412182621_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("Backend.Models.Chantier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateDebut")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Chantiers");
                });

            modelBuilder.Entity("Backend.Models.Management.Mouvement", b =>
                {
                    b.Property<int>("ChantierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RessourceChantierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RessourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChantierId", "Id");

                    b.HasIndex("RessourceChantierId", "RessourceId");

                    b.ToTable("Mouvements");
                });

            modelBuilder.Entity("Backend.Models.Management.Ressource", b =>
                {
                    b.Property<int>("ChantierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unite")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChantierId", "Id");

                    b.ToTable("Ressources");
                });

            modelBuilder.Entity("Backend.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChantierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleUtilisateur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChantierId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Backend.Models.Management.Mouvement", b =>
                {
                    b.HasOne("Backend.Models.Chantier", "Chantier")
                        .WithMany()
                        .HasForeignKey("ChantierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Management.Ressource", "Ressource")
                        .WithMany()
                        .HasForeignKey("RessourceChantierId", "RessourceId");

                    b.Navigation("Chantier");

                    b.Navigation("Ressource");
                });

            modelBuilder.Entity("Backend.Models.Management.Ressource", b =>
                {
                    b.HasOne("Backend.Models.Chantier", "Chantier")
                        .WithMany()
                        .HasForeignKey("ChantierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chantier");
                });

            modelBuilder.Entity("Backend.Models.Utilisateur", b =>
                {
                    b.HasOne("Backend.Models.Chantier", null)
                        .WithMany("Membres")
                        .HasForeignKey("ChantierId");
                });

            modelBuilder.Entity("Backend.Models.Chantier", b =>
                {
                    b.Navigation("Membres");
                });
#pragma warning restore 612, 618
        }
    }
}
